#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Выделение текста
"""

# ######################################################################################################################
# Импорт необходимых инструментов
# ######################################################################################################################
# Персональные
from neweraai.modules.core.language import Language  # Определение языка

# ######################################################################################################################
# Выделение текста
# ######################################################################################################################
class Color(Language):
    """Выделение текста"""

    # ------------------------------------------------------------------------------------------------------------------
    # Конструктор
    # ------------------------------------------------------------------------------------------------------------------

    def __init__(self):
        super().__init__()  # Выполнение конструктора из суперкласса

        self._green: str = '\033[92m'     # Зеленый
        self._red: str = '\033[91m'       # Красный
        self._blue: str = '\033[94m'      # Синий
        self._bold: str = '\033[1m'       # Жирный
        self._underline: str = '\033[4m'  # Подчеркнутный
        self._end: str = '\033[0m'        # Выход

    # ------------------------------------------------------------------------------------------------------------------
    # Свойства
    # ------------------------------------------------------------------------------------------------------------------

    @property  # Получение зеленого цвета
    def green(self): return self._green

    @property  # Получение красного цвета
    def red(self): return self._red

    @property  # Получение синего цвета
    def blue(self): return self._blue

    @property  # Получение жирности текста
    def bold(self): return self._bold

    @property  # Получение подчеркнутого текста
    def underline(self): return self._underline

    @property  # Выход из режима редактирования текста
    def end(self): return self._end